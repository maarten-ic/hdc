import ctypes
from pyhdc import HDC

def {{ func.function }}({% for var in func.arguments if 'in' in var.intent %}
                    {%- if not loop.first %}, {% endif -%}
                    {{ var.name }}
                    {%- endfor %}):
    ctypes.CDLL('{{ func.soname }}', ctypes.RTLD_GLOBAL) #This or LD_PRELOAD is needed
    {% if func.module|length %}
    fm = ctypes.cdll.LoadLibrary('{{ func.module }}_bind.so')
    {% else %}
    fm = ctypes.cdll.LoadLibrary('{{ func.function }}_bind.so')
    {% endif %}
    input_hdc = HDC()
    output_hdc = HDC()

    {% for var in func.arguments if 'in' in var.intent %}
    input_hdc["{{ var.name }}"] = {{ var.name }}
    {%- endfor %}

    fm.{{ func.function }}_hdc(input_hdc, output_hdc)

    {% for var in func.arguments if var.intent == 'out' %}
    {{ var.name }} = output_hdc["{{ var.name }}"]
    {%- if var.type != 'type(hdc_t)' %}.to_python(){% endif %}
    {%- endfor %}
    return {% for var in func.arguments if var.intent == 'out' %}
        {%- if not loop.first %}, {% endif -%}
        {{ var.name }}
        {%- endfor %}
